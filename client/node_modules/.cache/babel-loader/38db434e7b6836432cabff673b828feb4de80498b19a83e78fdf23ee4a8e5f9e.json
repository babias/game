{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\InteractiveImageMap.js\";\n// InteractiveImageMap.js\nimport React from 'react';\nimport './InteractiveImageMap.css'; // Add styling if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveImageMap = ({\n  onAreaClick\n}) => {\n  const handleAreaClick = areaId => {\n    // Handle the click event, you can pass the clicked areaId to your game logic\n    onAreaClick(areaId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interactive-image-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/mainroom.jpg\",\n      alt: \"Interactive Image\",\n      useMap: \"#image-map\",\n      className: \"interactive-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n      name: \"image-map\",\n      children: [/*#__PURE__*/_jsxDEV(\"area\", {\n        shape: \"rect\",\n        coords: \"50,50,150,150\",\n        alt: \"Clickable Area 1\",\n        onClick: () => handleAreaClick('area1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n        shape: \"circle\",\n        coords: \"200,100,50\",\n        alt: \"Clickable Area 2\",\n        onClick: () => handleAreaClick('area2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"area\", {\n        shape: \"poly\",\n        coords: \"300,50,400,150,350,250,250,250\",\n        alt: \"Clickable Area 3\",\n        onClick: () => handleAreaClick('area3')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = InteractiveImageMap;\nexport default InteractiveImageMap;\nvar _c;\n$RefreshReg$(_c, \"InteractiveImageMap\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InteractiveImageMap","onAreaClick","handleAreaClick","areaId","className","children","src","alt","useMap","fileName","_jsxFileName","lineNumber","columnNumber","name","shape","coords","onClick","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/InteractiveImageMap.js"],"sourcesContent":["// InteractiveImageMap.js\r\nimport React from 'react';\r\nimport './InteractiveImageMap.css'; // Add styling if needed\r\n\r\nconst InteractiveImageMap = ({ onAreaClick }) => {\r\n  const handleAreaClick = (areaId) => {\r\n    // Handle the click event, you can pass the clicked areaId to your game logic\r\n    onAreaClick(areaId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"interactive-image-container\">\r\n      <img\r\n        src=\"/images/mainroom.jpg\"\r\n        alt=\"Interactive Image\"\r\n        useMap=\"#image-map\"\r\n        className=\"interactive-image\"\r\n      />\r\n\r\n      <map name=\"image-map\">\r\n        <area\r\n          shape=\"rect\"\r\n          coords=\"50,50,150,150\"\r\n          alt=\"Clickable Area 1\"\r\n          onClick={() => handleAreaClick('area1')}\r\n        />\r\n        <area\r\n          shape=\"circle\"\r\n          coords=\"200,100,50\"\r\n          alt=\"Clickable Area 2\"\r\n          onClick={() => handleAreaClick('area2')}\r\n        />\r\n        <area\r\n          shape=\"poly\"\r\n          coords=\"300,50,400,150,350,250,250,250\"\r\n          alt=\"Clickable Area 3\"\r\n          onClick={() => handleAreaClick('area3')}\r\n        />\r\n      </map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveImageMap;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAC/C,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAClC;IACAF,WAAW,CAACE,MAAM,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CN,OAAA;MACEO,GAAG,EAAC,sBAAsB;MAC1BC,GAAG,EAAC,mBAAmB;MACvBC,MAAM,EAAC,YAAY;MACnBJ,SAAS,EAAC;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAEFb,OAAA;MAAKc,IAAI,EAAC,WAAW;MAAAR,QAAA,gBACnBN,OAAA;QACEe,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,eAAe;QACtBR,GAAG,EAAC,kBAAkB;QACtBS,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAAC,OAAO;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFb,OAAA;QACEe,KAAK,EAAC,QAAQ;QACdC,MAAM,EAAC,YAAY;QACnBR,GAAG,EAAC,kBAAkB;QACtBS,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAAC,OAAO;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFb,OAAA;QACEe,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,gCAAgC;QACvCR,GAAG,EAAC,kBAAkB;QACtBS,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAAC,OAAO;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GArCIjB,mBAAmB;AAuCzB,eAAeA,mBAAmB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}