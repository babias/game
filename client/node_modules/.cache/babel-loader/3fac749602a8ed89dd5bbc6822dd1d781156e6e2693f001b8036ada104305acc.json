{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\Scene.js\",\n  _s = $RefreshSig$();\n// Scene.js\nimport React, { useState } from 'react';\nimport ScenarioDescription from './ScenarioDescription';\nimport ScenarioImage from './ScenarioImage';\nimport Choices from './Choices';\nimport './Scene.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = ({\n  scene,\n  onChoice\n}) => {\n  _s();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipText, setTooltipText] = useState('');\n  const [activeArea, setActiveArea] = useState(null);\n  const handleMouseOver = area => {\n    setShowTooltip(true);\n    setActiveArea(area);\n    updateTooltipText(area);\n  };\n  const handleMouseOut = () => {\n    setShowTooltip(false);\n    setActiveArea(null);\n  };\n  const isMainRoomImage = scene.image === '/images/mainroom.jpg';\n  const isSkeletonScene = scene.image === '/images/skeleton.jpg';\n  const interactiveAreas = [{\n    id: 'area1',\n    coords: [50, 100, 150, 200],\n    tooltip: 'Find an EXIT',\n    color: 'rgba(255, 0, 0, 0.3)' // Red color with transparency\n  }, {\n    id: 'area2',\n    coords: [250, 150, 300, 200],\n    tooltip: 'Second Area',\n    color: 'rgba(0, 0, 255, 0.3)' // Blue color with transparency\n  }];\n  const updateTooltipText = area => {\n    if (isMainRoomImage && scene.description.includes('Scene 1')) {\n      setTooltipText('Find an EXIT');\n    } else if (isSkeletonScene && scene.description.includes('Scene 3')) {\n      setTooltipText('DEAD');\n    } else {\n      setTooltipText(area ? area.tooltip : 'This is an interactive area!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scene-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      dangerouslySetInnerHTML: {\n        __html: scene.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      onMouseOut: handleMouseOut,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: scene.image,\n        alt: \"Scenario Image\",\n        style: {\n          maxWidth: 400,\n          maxHeight: 400\n        },\n        className: \"scenario-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), interactiveAreas.map(area => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interactive-area\",\n        onMouseOver: () => handleMouseOver(area),\n        style: {\n          position: 'absolute',\n          top: `${area.coords[1]}px`,\n          left: `${area.coords[0]}px`,\n          width: `${area.coords[2] - area.coords[0]}px`,\n          height: `${area.coords[3] - area.coords[1]}px`,\n          cursor: 'pointer',\n          backgroundColor: area.color,\n          border: activeArea === area ? '2px solid #000' : 'none'\n        }\n      }, area.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tooltipText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Choices, {\n      choices: scene.choices,\n      onChoice: onChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"sgg6kZGB6R7zTcnRCJt8/+93eDw=\");\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useState","ScenarioDescription","ScenarioImage","Choices","jsxDEV","_jsxDEV","Scene","scene","onChoice","_s","showTooltip","setShowTooltip","tooltipText","setTooltipText","activeArea","setActiveArea","handleMouseOver","area","updateTooltipText","handleMouseOut","isMainRoomImage","image","isSkeletonScene","interactiveAreas","id","coords","tooltip","color","description","includes","className","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","onMouseOut","src","alt","style","maxWidth","maxHeight","map","onMouseOver","position","top","left","width","height","cursor","backgroundColor","border","choices","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/Scene.js"],"sourcesContent":["// Scene.js\r\nimport React, { useState } from 'react';\r\nimport ScenarioDescription from './ScenarioDescription';\r\nimport ScenarioImage from './ScenarioImage';\r\nimport Choices from './Choices';\r\nimport './Scene.css';\r\n\r\nconst Scene = ({ scene, onChoice }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [tooltipText, setTooltipText] = useState('');\r\n  const [activeArea, setActiveArea] = useState(null);\r\n\r\n  const handleMouseOver = (area) => {\r\n    setShowTooltip(true);\r\n    setActiveArea(area);\r\n    updateTooltipText(area);\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setShowTooltip(false);\r\n    setActiveArea(null);\r\n  };\r\n\r\n  const isMainRoomImage = scene.image === '/images/mainroom.jpg';\r\n  const isSkeletonScene = scene.image === '/images/skeleton.jpg';\r\n\r\n  const interactiveAreas = [\r\n    {\r\n      id: 'area1',\r\n      coords: [50, 100, 150, 200],\r\n      tooltip: 'Find an EXIT',\r\n      color: 'rgba(255, 0, 0, 0.3)', // Red color with transparency\r\n    },\r\n    {\r\n      id: 'area2',\r\n      coords: [250, 150, 300, 200],\r\n      tooltip: 'Second Area',\r\n      color: 'rgba(0, 0, 255, 0.3)', // Blue color with transparency\r\n    },\r\n  ];\r\n\r\n  const updateTooltipText = (area) => {\r\n    if (isMainRoomImage && scene.description.includes('Scene 1')) {\r\n      setTooltipText('Find an EXIT');\r\n    } else if (isSkeletonScene && scene.description.includes('Scene 3')) {\r\n      setTooltipText('DEAD');\r\n    } else {\r\n      setTooltipText(area ? area.tooltip : 'This is an interactive area!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scene-container\">\r\n      <h3 dangerouslySetInnerHTML={{ __html: scene.description }}></h3>\r\n      <div\r\n        className=\"image-container\"\r\n        onMouseOut={handleMouseOut}\r\n      >\r\n        <img\r\n          src={scene.image}\r\n          alt=\"Scenario Image\"\r\n          style={{\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n          }}\r\n          className=\"scenario-image\"\r\n        />\r\n        {interactiveAreas.map((area) => (\r\n          <div\r\n            key={area.id}\r\n            className=\"interactive-area\"\r\n            onMouseOver={() => handleMouseOver(area)}\r\n            style={{\r\n              position: 'absolute',\r\n              top: `${area.coords[1]}px`,\r\n              left: `${area.coords[0]}px`,\r\n              width: `${area.coords[2] - area.coords[0]}px`,\r\n              height: `${area.coords[3] - area.coords[1]}px`,\r\n              cursor: 'pointer',\r\n              backgroundColor: area.color,\r\n              border: activeArea === area ? '2px solid #000' : 'none',\r\n            }}\r\n          />\r\n        ))}\r\n        {showTooltip && (\r\n          <div className=\"tooltip\">\r\n            <p>{tooltipText}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Choices choices={scene.choices} onChoice={onChoice} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}