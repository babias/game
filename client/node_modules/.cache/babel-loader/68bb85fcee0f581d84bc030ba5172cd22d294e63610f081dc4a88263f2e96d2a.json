{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\n// ChatRoom.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const inputRef = useRef(null);\n  const ws = useRef(null);\n  useEffect(() => {\n    // Connect to the WebSocket server\n    ws.current = new WebSocket('ws://localhost:3001');\n\n    // Handle incoming messages from the server\n    ws.current.onmessage = event => {\n      const newMessage = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    if (inputMessage.trim() !== '' && username.trim() !== '') {\n      const newMessage = {\n        username,\n        text: inputMessage\n      };\n\n      // Send the message to the server\n      ws.current.send(JSON.stringify(newMessage));\n      setInputMessage('');\n      inputRef.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"Y0DGnsDpS2NuNdInEFC6no6q/Cc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatRoom","_s","messages","setMessages","inputMessage","setInputMessage","username","setUsername","inputRef","ws","current","WebSocket","onmessage","event","newMessage","JSON","parse","data","prevMessages","close","handleSendMessage","trim","text","send","stringify","focus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/ChatRoom.js"],"sourcesContent":["// ChatRoom.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst ChatRoom = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const inputRef = useRef(null);\r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Connect to the WebSocket server\r\n    ws.current = new WebSocket('ws://localhost:3001');\r\n\r\n    // Handle incoming messages from the server\r\n    ws.current.onmessage = (event) => {\r\n      const newMessage = JSON.parse(event.data);\r\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n    };\r\n\r\n    // Clean up the WebSocket connection when the component unmounts\r\n    return () => {\r\n      ws.current.close();\r\n    };\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputMessage.trim() !== '' && username.trim() !== '') {\r\n      const newMessage = {\r\n        username,\r\n        text: inputMessage,\r\n      };\r\n\r\n      // Send the message to the server\r\n      ws.current.send(JSON.stringify(newMessage));\r\n\r\n      setInputMessage('');\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... (rest of the ChatRoom component remains the same) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMa,EAAE,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEvBC,SAAS,CAAC,MAAM;IACd;IACAY,EAAE,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEjD;IACAF,EAAE,CAACC,OAAO,CAACE,SAAS,GAAIC,KAAK,IAAK;MAChC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACzCd,WAAW,CAAEe,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,UAAU,CAAC,CAAC;IAC9D,CAAC;;IAED;IACA,OAAO,MAAM;MACXL,EAAE,CAACC,OAAO,CAACS,KAAK,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIhB,YAAY,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIf,QAAQ,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACxD,MAAMP,UAAU,GAAG;QACjBR,QAAQ;QACRgB,IAAI,EAAElB;MACR,CAAC;;MAED;MACAK,EAAE,CAACC,OAAO,CAACa,IAAI,CAACR,IAAI,CAACS,SAAS,CAACV,UAAU,CAAC,CAAC;MAE3CT,eAAe,CAAC,EAAE,CAAC;MACnBG,QAAQ,CAACE,OAAO,CAACe,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}