{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\Scene.js\",\n  _s = $RefreshSig$();\n// Scene.js\nimport React, { useState } from 'react';\nimport ScenarioDescription from './ScenarioDescription';\nimport ScenarioImage from './ScenarioImage';\nimport Choices from './Choices';\nimport './Scene.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = ({\n  scene,\n  onChoice\n}) => {\n  _s();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipText, setTooltipText] = useState('');\n  const handleMouseOver = () => {\n    setShowTooltip(true);\n  };\n  const handleMouseOut = () => {\n    setShowTooltip(false);\n  };\n  const isMainRoomImage = scene.image === '/images/mainroom.jpg';\n  const isSkeletonScene = scene.image === '/images/skeleton.jpg';\n  const updateTooltipText = () => {\n    if (isMainRoomImage && scene.description.includes('Scene 1')) {\n      setTooltipText('Find an EXIT');\n    } else if (isSkeletonScene && scene.description.includes('Scene 3')) {\n      setTooltipText('DEAD');\n    } else {\n      setTooltipText('This is an interactive area!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scene-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      dangerouslySetInnerHTML: {\n        __html: scene.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      onMouseOver: () => {\n        handleMouseOver();\n        updateTooltipText();\n      },\n      onMouseOut: handleMouseOut,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: scene.image,\n        alt: \"Scenario Image\",\n        style: {\n          maxWidth: 400,\n          maxHeight: 400\n        },\n        className: \"scenario-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tooltipText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Choices, {\n      choices: scene.choices,\n      onChoice: onChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"/YGoqMmqFMjS0aQ9bo+BvO9+1kc=\");\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useState","ScenarioDescription","ScenarioImage","Choices","jsxDEV","_jsxDEV","Scene","scene","onChoice","_s","showTooltip","setShowTooltip","tooltipText","setTooltipText","handleMouseOver","handleMouseOut","isMainRoomImage","image","isSkeletonScene","updateTooltipText","description","includes","className","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","onMouseOver","onMouseOut","src","alt","style","maxWidth","maxHeight","choices","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/Scene.js"],"sourcesContent":["// Scene.js\r\nimport React, { useState } from 'react';\r\nimport ScenarioDescription from './ScenarioDescription';\r\nimport ScenarioImage from './ScenarioImage';\r\nimport Choices from './Choices';\r\nimport './Scene.css';\r\n\r\nconst Scene = ({ scene, onChoice }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [tooltipText, setTooltipText] = useState('');\r\n\r\n  const handleMouseOver = () => {\r\n    setShowTooltip(true);\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setShowTooltip(false);\r\n  };\r\n\r\n  const isMainRoomImage = scene.image === '/images/mainroom.jpg';\r\n  const isSkeletonScene = scene.image === '/images/skeleton.jpg';\r\n\r\n  const updateTooltipText = () => {\r\n    if (isMainRoomImage && scene.description.includes('Scene 1')) {\r\n      setTooltipText('Find an EXIT');\r\n    } else if (isSkeletonScene && scene.description.includes('Scene 3')) {\r\n      setTooltipText('DEAD');\r\n    } else {\r\n      setTooltipText('This is an interactive area!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scene-container\">\r\n      <h3 dangerouslySetInnerHTML={{ __html: scene.description }}></h3>\r\n      <div\r\n        className=\"image-container\"\r\n        onMouseOver={() => {\r\n          handleMouseOver();\r\n          updateTooltipText();\r\n        }}\r\n        onMouseOut={handleMouseOut}\r\n      >\r\n        <img\r\n          src={scene.image}\r\n          alt=\"Scenario Image\"\r\n          style={{\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n          }}\r\n          className=\"scenario-image\"\r\n        />\r\n        {showTooltip && (\r\n          <div className=\"tooltip\">\r\n            <p>{tooltipText}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Choices choices={scene.choices} onChoice={onChoice} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC5BH,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMK,eAAe,GAAGT,KAAK,CAACU,KAAK,KAAK,sBAAsB;EAC9D,MAAMC,eAAe,GAAGX,KAAK,CAACU,KAAK,KAAK,sBAAsB;EAE9D,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIH,eAAe,IAAIT,KAAK,CAACa,WAAW,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC5DR,cAAc,CAAC,cAAc,CAAC;IAChC,CAAC,MAAM,IAAIK,eAAe,IAAIX,KAAK,CAACa,WAAW,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;MACnER,cAAc,CAAC,MAAM,CAAC;IACxB,CAAC,MAAM;MACLA,cAAc,CAAC,8BAA8B,CAAC;IAChD;EACF,CAAC;EAED,oBACER,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BlB,OAAA;MAAImB,uBAAuB,EAAE;QAAEC,MAAM,EAAElB,KAAK,CAACa;MAAY;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjExB,OAAA;MACEiB,SAAS,EAAC,iBAAiB;MAC3BQ,WAAW,EAAEA,CAAA,KAAM;QACjBhB,eAAe,CAAC,CAAC;QACjBK,iBAAiB,CAAC,CAAC;MACrB,CAAE;MACFY,UAAU,EAAEhB,cAAe;MAAAQ,QAAA,gBAE3BlB,OAAA;QACE2B,GAAG,EAAEzB,KAAK,CAACU,KAAM;QACjBgB,GAAG,EAAC,gBAAgB;QACpBC,KAAK,EAAE;UACLC,QAAQ,EAAE,GAAG;UACbC,SAAS,EAAE;QACb,CAAE;QACFd,SAAS,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACDnB,WAAW,iBACVL,OAAA;QAAKiB,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBlB,OAAA;UAAAkB,QAAA,EAAIX;QAAW;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNxB,OAAA,CAACF,OAAO;MAACkC,OAAO,EAAE9B,KAAK,CAAC8B,OAAQ;MAAC7B,QAAQ,EAAEA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtDIH,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}