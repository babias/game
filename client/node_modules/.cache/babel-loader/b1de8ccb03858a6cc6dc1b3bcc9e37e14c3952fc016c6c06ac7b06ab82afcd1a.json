{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\n// ChatRoom.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst ChatRoom = () => {\n  _s();\n  const [newMessage, setNewMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    socket.on('chatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('connectionRejected', message => {\n      console.log('Connection rejected:', message);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    socket.emit('chatMessage', newMessage);\n    setNewMessage('');\n  };\n  const handleConnect = () => {\n    socket.connect();\n    setIsConnected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `${message.userId}: ${message.message}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"rWmY9X+C4CF9eJIpfi85Yoo3X5k=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ChatRoom","_s","newMessage","setNewMessage","messages","setMessages","isConnected","setIsConnected","on","message","prevMessages","console","log","disconnect","handleSendMessage","emit","handleConnect","connect","children","map","index","userId","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/ChatRoom.js"],"sourcesContent":["// ChatRoom.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ChatRoom = () => {\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on('chatMessage', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    socket.on('connectionRejected', (message) => {\r\n      console.log('Connection rejected:', message);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    socket.emit('chatMessage', newMessage);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleConnect = () => {\r\n    socket.connect();\r\n    setIsConnected(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((message, index) => (\r\n          <div key={index}>{`${message.userId}: ${message.message}`}</div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {!isConnected && (\r\n          <button onClick={handleConnect}>Connect</button>\r\n        )}\r\n        {isConnected && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}