{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\n// ChatRoom.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  transports: ['websocket']\n}); // Replace with your server U\n\nsocket.on('connect', () => {\n  console.log('Connected to server');\n});\nsocket.on('disconnect', () => {\n  console.log('Disconnected from server');\n});\nsocket.on('error', error => {\n  console.error('Socket connection error:', error);\n});\nconst ChatRoom = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Listen for incoming chat messages\n    socket.on('chatMessage', message => {\n      console.log('Received chat message on client:', message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      // Clean up when the component unmounts\n      socket.disconnect();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    // Send a new chat message to the server\n    socket.emit('chatMessage', newMessage);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","transports","on","console","log","error","ChatRoom","_s","messages","setMessages","newMessage","setNewMessage","message","prevMessages","disconnect","handleSendMessage","emit","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/ChatRoom.js"],"sourcesContent":["// ChatRoom.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000', {\r\n  transports: ['websocket'],\r\n}); // Replace with your server U\r\n\r\nsocket.on('connect', () => {\r\n  console.log('Connected to server');\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from server');\r\n});\r\n\r\nsocket.on('error', (error) => {\r\n  console.error('Socket connection error:', error);\r\n});\r\n\r\nconst ChatRoom = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Listen for incoming chat messages\r\n    socket.on('chatMessage', (message) => {\r\n      console.log('Received chat message on client:', message);\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n  \r\n    return () => {\r\n      // Clean up when the component unmounts\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    // Send a new chat message to the server\r\n    socket.emit('chatMessage', newMessage);\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((message, index) => (\r\n          <div key={index}>{message}</div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;EACzCI,UAAU,EAAE,CAAC,WAAW;AAC1B,CAAC,CAAC,CAAC,CAAC;;AAEJD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;EACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC,CAAC;AAEFJ,MAAM,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;EAC5BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC,CAAC,CAAC;AAEFJ,MAAM,CAACE,EAAE,CAAC,OAAO,EAAGG,KAAK,IAAK;EAC5BF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;AAClD,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACE,EAAE,CAAC,aAAa,EAAGU,OAAO,IAAK;MACpCT,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEQ,OAAO,CAAC;MACxDH,WAAW,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAZ,MAAM,CAACc,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAf,MAAM,CAACgB,IAAI,CAAC,aAAa,EAAEN,UAAU,CAAC;IACtCC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EACGT,QAAQ,CAACU,GAAG,CAAC,CAACN,OAAO,EAAEO,KAAK,kBAC3BpB,OAAA;QAAAkB,QAAA,EAAkBL;MAAO,GAAfO,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEf,UAAW;QAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFxB,OAAA;QAAQ8B,OAAO,EAAEd,iBAAkB;QAAAE,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxCID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}