{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\14022\\\\Desktop\\\\adventure-game\\\\adventure-game-C13\\\\src\\\\components\\\\TextAdventureGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAdventureGame = () => {\n  _s();\n  const [scenario, setScenario] = useState({\n    description1: 'Welcome to the most amazing, TOP-rated Escape Text-Based Adventure Game!',\n    description2: 'You find yorself locked in a VIRTUAL room and It is bad, you have to escape the infamous C13 Dungeons',\n    choices: ['Open the door', 'Look out the window'],\n    images: ['/images/image1.jpg', '/images/image2.jpg']\n  });\n  const handleChoice = choice => {\n    switch (choice) {\n      case 'Open the door':\n        setScenario({\n          description1: 'You open the door and find a key on the floor.',\n          choices: ['Pick up the key', 'Explore the room further'],\n          images: ['/images/image3.jpg'] // Image for this scenario\n        });\n        break;\n      case 'Look out the window':\n        setScenario({\n          description1: 'You see a beautiful landscape outside.',\n          choices: ['Go back inside', 'Jump out the window'],\n          images: ['/images/image4.jpg'] // Image for this scenario\n        });\n        break;\n      case 'Pick up the key':\n        setScenario({\n          description1: 'You now have the key in your inventory.',\n          choices: ['Explore the room further', 'Use the key on the locked chest']\n        });\n        break;\n      case 'Explore the room further':\n        setScenario({\n          description1: 'You find a mysterious book on the shelf.',\n          choices: ['Read the book', 'Ignore the book']\n        });\n        break;\n      case 'Use the key on the locked chest':\n        setScenario({\n          description1: 'The chest opens, revealing a treasure!',\n          choices: ['Celebrate your victory', 'Continue exploring']\n        });\n        break;\n      // can addmore cases for other choices and scenarios\n      default:\n        setScenario({\n          description1: 'You make a choice, but nothing interesting happens.',\n          choices: ['Try again']\n        });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: scenario.description1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: scenario.description2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: scenario.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChoice(choice),\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TextAdventureGame, \"jJaSvWEcxP/daKrV0UZTC625/Oc=\");\n_c = TextAdventureGame;\nexport default TextAdventureGame;\nvar _c;\n$RefreshReg$(_c, \"TextAdventureGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextAdventureGame","_s","scenario","setScenario","description1","description2","choices","images","handleChoice","choice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/14022/Desktop/adventure-game/adventure-game-C13/src/components/TextAdventureGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TextAdventureGame = () => {\r\n  const [scenario, setScenario] = useState({\r\n    description1: 'Welcome to the most amazing, TOP-rated Escape Text-Based Adventure Game!',\r\n    description2: 'You find yorself locked in a VIRTUAL room and It is bad, you have to escape the infamous C13 Dungeons',\r\n    choices: ['Open the door', 'Look out the window'],\r\n    images: ['/images/image1.jpg', '/images/image2.jpg'],\r\n  });\r\n\r\n  const handleChoice = (choice) => {\r\n    switch (choice) {\r\n      case 'Open the door':\r\n        setScenario({\r\n          description1: 'You open the door and find a key on the floor.',\r\n          choices: ['Pick up the key', 'Explore the room further'],\r\n          images: ['/images/image3.jpg'], // Image for this scenario\r\n        });\r\n        break;\r\n      case 'Look out the window':\r\n        setScenario({\r\n          description1: 'You see a beautiful landscape outside.',\r\n          choices: ['Go back inside', 'Jump out the window'],\r\n          images: ['/images/image4.jpg'], // Image for this scenario\r\n        });\r\n        break;\r\n      case 'Pick up the key':\r\n        setScenario({\r\n          description1: 'You now have the key in your inventory.',\r\n          choices: ['Explore the room further', 'Use the key on the locked chest'],\r\n        });\r\n        break;\r\n      case 'Explore the room further':\r\n        setScenario({\r\n          description1: 'You find a mysterious book on the shelf.',\r\n          choices: ['Read the book', 'Ignore the book'],\r\n        });\r\n        break;\r\n      case 'Use the key on the locked chest':\r\n        setScenario({\r\n          description1: 'The chest opens, revealing a treasure!',\r\n          choices: ['Celebrate your victory', 'Continue exploring'],\r\n        });\r\n        break;\r\n      // can addmore cases for other choices and scenarios\r\n      default:\r\n        setScenario({\r\n          description1: 'You make a choice, but nothing interesting happens.',\r\n          choices: ['Try again'],\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{scenario.description1}</h2>\r\n      <h1>{scenario.description2}</h1>\r\n      <ul>\r\n        {scenario.choices.map((choice, index) => (\r\n          <li key={index}>\r\n            <button onClick={() => handleChoice(choice)}>{choice}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextAdventureGame;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,YAAY,EAAE,0EAA0E;IACxFC,YAAY,EAAE,uGAAuG;IACrHC,OAAO,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC;IACjDC,MAAM,EAAE,CAAC,oBAAoB,EAAE,oBAAoB;EACrD,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,QAAQA,MAAM;MACZ,KAAK,eAAe;QAClBN,WAAW,CAAC;UACVC,YAAY,EAAE,gDAAgD;UAC9DE,OAAO,EAAE,CAAC,iBAAiB,EAAE,0BAA0B,CAAC;UACxDC,MAAM,EAAE,CAAC,oBAAoB,CAAC,CAAE;QAClC,CAAC,CAAC;QACF;MACF,KAAK,qBAAqB;QACxBJ,WAAW,CAAC;UACVC,YAAY,EAAE,wCAAwC;UACtDE,OAAO,EAAE,CAAC,gBAAgB,EAAE,qBAAqB,CAAC;UAClDC,MAAM,EAAE,CAAC,oBAAoB,CAAC,CAAE;QAClC,CAAC,CAAC;QACF;MACF,KAAK,iBAAiB;QACpBJ,WAAW,CAAC;UACVC,YAAY,EAAE,yCAAyC;UACvDE,OAAO,EAAE,CAAC,0BAA0B,EAAE,iCAAiC;QACzE,CAAC,CAAC;QACF;MACF,KAAK,0BAA0B;QAC7BH,WAAW,CAAC;UACVC,YAAY,EAAE,0CAA0C;UACxDE,OAAO,EAAE,CAAC,eAAe,EAAE,iBAAiB;QAC9C,CAAC,CAAC;QACF;MACF,KAAK,iCAAiC;QACpCH,WAAW,CAAC;UACVC,YAAY,EAAE,wCAAwC;UACtDE,OAAO,EAAE,CAAC,wBAAwB,EAAE,oBAAoB;QAC1D,CAAC,CAAC;QACF;MACF;MACA;QACEH,WAAW,CAAC;UACVC,YAAY,EAAE,qDAAqD;UACnEE,OAAO,EAAE,CAAC,WAAW;QACvB,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACE;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCf,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACG;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCf,OAAA;MAAAW,QAAA,EACGR,QAAQ,CAACI,OAAO,CAACS,GAAG,CAAC,CAACN,MAAM,EAAEO,KAAK,kBAClCjB,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAQkB,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACC,MAAM,CAAE;UAAAC,QAAA,EAAED;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADvDE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACb,EAAA,CAhEID,iBAAiB;AAAAkB,EAAA,GAAjBlB,iBAAiB;AAkEvB,eAAeA,iBAAiB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}